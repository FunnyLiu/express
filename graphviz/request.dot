digraph tree
{
    nodesep=0.5;
    charset="UTF-8";
    rankdir=LR;
    fixedsize=true;
    compound=true;
    node [style="rounded,filled", width=0, height=0, shape=box, fillcolor="#E5E5E5", concentrate=true]

    subgraph cluster_request {
        label = "request.js";
        "req"->"基于原生http模块IncomingMessage";
        "req.accepts()"->"基于accepts模块";
        "req.acceptsEncodings()"->"基于accepts模块";
        "req.acceptsCharsets()"->"基于accepts模块";
        "req.acceptsLanguages()"->"基于accepts模块";
		"req.get()";
        "req.header()";
        "req.range()" -> "req.get()"->"基于range-parser模块"[color=red]
        "req.param()";
        "req.is()"->"基于type-is模块";
        "defineGetter()"->"通用方法用来给req定义属性及对应get"->"Object.defineProperty"
        "this.headers";
        "this.params";
        "this.body";
        "this.query";
        "req.fresh"->"基于fresh模块";
        "req.hostname";
        "req.ip"->"基于proxy-addr模块";
        "req.ips"->"基于proxy-addr模块";
        "req.path"->"基于parseurl模块";
        "req.protocol";
        "req.secure"->"req.protocol"[color=red,label="判断是否安全"];
        "req.subdomains"->"req.hostname"[label="字符串解析",color=red];
        "req.xhr";
    }
    "req.get()"->"req.header()"->"this.headers"[color=blue]
    "req.param()"->"this.params";
    "req.param()"->"this.body";
    "req.param()"->"this.query";
    "req.protocol"->"X-Forwarded-Proto";
    "req.hostname"->"Host";
    "req.xhr"->"X-Requested-With";


    subgraph cluster_http_header {
        label="http头"
        "Host";
        "X-Forwarded-Proto";
        "X-Requested-With";
    }
}